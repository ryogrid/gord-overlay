// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: server/private.proto

package serverconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	server "github.com/ryogrid/gord-overlay/server"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// InternalServiceName is the fully-qualified name of the InternalService service.
	InternalServiceName = "server.InternalService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// InternalServicePingProcedure is the fully-qualified name of the InternalService's Ping RPC.
	InternalServicePingProcedure = "/server.InternalService/Ping"
	// InternalServiceSuccessorsProcedure is the fully-qualified name of the InternalService's
	// Successors RPC.
	InternalServiceSuccessorsProcedure = "/server.InternalService/Successors"
	// InternalServicePredecessorProcedure is the fully-qualified name of the InternalService's
	// Predecessor RPC.
	InternalServicePredecessorProcedure = "/server.InternalService/Predecessor"
	// InternalServiceFindSuccessorByTableProcedure is the fully-qualified name of the InternalService's
	// FindSuccessorByTable RPC.
	InternalServiceFindSuccessorByTableProcedure = "/server.InternalService/FindSuccessorByTable"
	// InternalServiceFindSuccessorByListProcedure is the fully-qualified name of the InternalService's
	// FindSuccessorByList RPC.
	InternalServiceFindSuccessorByListProcedure = "/server.InternalService/FindSuccessorByList"
	// InternalServiceFindClosestPrecedingNodeProcedure is the fully-qualified name of the
	// InternalService's FindClosestPrecedingNode RPC.
	InternalServiceFindClosestPrecedingNodeProcedure = "/server.InternalService/FindClosestPrecedingNode"
	// InternalServiceNotifyProcedure is the fully-qualified name of the InternalService's Notify RPC.
	InternalServiceNotifyProcedure = "/server.InternalService/Notify"
	// InternalServicePutValueInnerProcedure is the fully-qualified name of the InternalService's
	// PutValueInner RPC.
	InternalServicePutValueInnerProcedure = "/server.InternalService/PutValueInner"
	// InternalServiceGetValueInnerProcedure is the fully-qualified name of the InternalService's
	// GetValueInner RPC.
	InternalServiceGetValueInnerProcedure = "/server.InternalService/GetValueInner"
	// InternalServiceDeleteValueInnerProcedure is the fully-qualified name of the InternalService's
	// DeleteValueInner RPC.
	InternalServiceDeleteValueInnerProcedure = "/server.InternalService/DeleteValueInner"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	internalServiceServiceDescriptor                        = server.File_server_private_proto.Services().ByName("InternalService")
	internalServicePingMethodDescriptor                     = internalServiceServiceDescriptor.Methods().ByName("Ping")
	internalServiceSuccessorsMethodDescriptor               = internalServiceServiceDescriptor.Methods().ByName("Successors")
	internalServicePredecessorMethodDescriptor              = internalServiceServiceDescriptor.Methods().ByName("Predecessor")
	internalServiceFindSuccessorByTableMethodDescriptor     = internalServiceServiceDescriptor.Methods().ByName("FindSuccessorByTable")
	internalServiceFindSuccessorByListMethodDescriptor      = internalServiceServiceDescriptor.Methods().ByName("FindSuccessorByList")
	internalServiceFindClosestPrecedingNodeMethodDescriptor = internalServiceServiceDescriptor.Methods().ByName("FindClosestPrecedingNode")
	internalServiceNotifyMethodDescriptor                   = internalServiceServiceDescriptor.Methods().ByName("Notify")
	internalServicePutValueInnerMethodDescriptor            = internalServiceServiceDescriptor.Methods().ByName("PutValueInner")
	internalServiceGetValueInnerMethodDescriptor            = internalServiceServiceDescriptor.Methods().ByName("GetValueInner")
	internalServiceDeleteValueInnerMethodDescriptor         = internalServiceServiceDescriptor.Methods().ByName("DeleteValueInner")
)

// InternalServiceClient is a client for the server.InternalService service.
type InternalServiceClient interface {
	Ping(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[emptypb.Empty], error)
	Successors(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[server.Nodes], error)
	Predecessor(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[server.Node], error)
	FindSuccessorByTable(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error)
	FindSuccessorByList(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error)
	FindClosestPrecedingNode(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error)
	Notify(context.Context, *connect.Request[server.Node]) (*connect.Response[emptypb.Empty], error)
	PutValueInner(context.Context, *connect.Request[server.PutValueInnerRequest]) (*connect.Response[server.PutValueInnerResponse], error)
	GetValueInner(context.Context, *connect.Request[server.GetValueInnerRequest]) (*connect.Response[server.GetValueInnerResponse], error)
	DeleteValueInner(context.Context, *connect.Request[server.DeleteValueInnerRequest]) (*connect.Response[server.DeleteValueInnerResponse], error)
}

// NewInternalServiceClient constructs a client for the server.InternalService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewInternalServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) InternalServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &internalServiceClient{
		ping: connect.NewClient[emptypb.Empty, emptypb.Empty](
			httpClient,
			baseURL+InternalServicePingProcedure,
			connect.WithSchema(internalServicePingMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		successors: connect.NewClient[emptypb.Empty, server.Nodes](
			httpClient,
			baseURL+InternalServiceSuccessorsProcedure,
			connect.WithSchema(internalServiceSuccessorsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		predecessor: connect.NewClient[emptypb.Empty, server.Node](
			httpClient,
			baseURL+InternalServicePredecessorProcedure,
			connect.WithSchema(internalServicePredecessorMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		findSuccessorByTable: connect.NewClient[server.FindRequest, server.Node](
			httpClient,
			baseURL+InternalServiceFindSuccessorByTableProcedure,
			connect.WithSchema(internalServiceFindSuccessorByTableMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		findSuccessorByList: connect.NewClient[server.FindRequest, server.Node](
			httpClient,
			baseURL+InternalServiceFindSuccessorByListProcedure,
			connect.WithSchema(internalServiceFindSuccessorByListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		findClosestPrecedingNode: connect.NewClient[server.FindRequest, server.Node](
			httpClient,
			baseURL+InternalServiceFindClosestPrecedingNodeProcedure,
			connect.WithSchema(internalServiceFindClosestPrecedingNodeMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		notify: connect.NewClient[server.Node, emptypb.Empty](
			httpClient,
			baseURL+InternalServiceNotifyProcedure,
			connect.WithSchema(internalServiceNotifyMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		putValueInner: connect.NewClient[server.PutValueInnerRequest, server.PutValueInnerResponse](
			httpClient,
			baseURL+InternalServicePutValueInnerProcedure,
			connect.WithSchema(internalServicePutValueInnerMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getValueInner: connect.NewClient[server.GetValueInnerRequest, server.GetValueInnerResponse](
			httpClient,
			baseURL+InternalServiceGetValueInnerProcedure,
			connect.WithSchema(internalServiceGetValueInnerMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteValueInner: connect.NewClient[server.DeleteValueInnerRequest, server.DeleteValueInnerResponse](
			httpClient,
			baseURL+InternalServiceDeleteValueInnerProcedure,
			connect.WithSchema(internalServiceDeleteValueInnerMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// internalServiceClient implements InternalServiceClient.
type internalServiceClient struct {
	ping                     *connect.Client[emptypb.Empty, emptypb.Empty]
	successors               *connect.Client[emptypb.Empty, server.Nodes]
	predecessor              *connect.Client[emptypb.Empty, server.Node]
	findSuccessorByTable     *connect.Client[server.FindRequest, server.Node]
	findSuccessorByList      *connect.Client[server.FindRequest, server.Node]
	findClosestPrecedingNode *connect.Client[server.FindRequest, server.Node]
	notify                   *connect.Client[server.Node, emptypb.Empty]
	putValueInner            *connect.Client[server.PutValueInnerRequest, server.PutValueInnerResponse]
	getValueInner            *connect.Client[server.GetValueInnerRequest, server.GetValueInnerResponse]
	deleteValueInner         *connect.Client[server.DeleteValueInnerRequest, server.DeleteValueInnerResponse]
}

// Ping calls server.InternalService.Ping.
func (c *internalServiceClient) Ping(ctx context.Context, req *connect.Request[emptypb.Empty]) (*connect.Response[emptypb.Empty], error) {
	return c.ping.CallUnary(ctx, req)
}

// Successors calls server.InternalService.Successors.
func (c *internalServiceClient) Successors(ctx context.Context, req *connect.Request[emptypb.Empty]) (*connect.Response[server.Nodes], error) {
	return c.successors.CallUnary(ctx, req)
}

// Predecessor calls server.InternalService.Predecessor.
func (c *internalServiceClient) Predecessor(ctx context.Context, req *connect.Request[emptypb.Empty]) (*connect.Response[server.Node], error) {
	return c.predecessor.CallUnary(ctx, req)
}

// FindSuccessorByTable calls server.InternalService.FindSuccessorByTable.
func (c *internalServiceClient) FindSuccessorByTable(ctx context.Context, req *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error) {
	return c.findSuccessorByTable.CallUnary(ctx, req)
}

// FindSuccessorByList calls server.InternalService.FindSuccessorByList.
func (c *internalServiceClient) FindSuccessorByList(ctx context.Context, req *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error) {
	return c.findSuccessorByList.CallUnary(ctx, req)
}

// FindClosestPrecedingNode calls server.InternalService.FindClosestPrecedingNode.
func (c *internalServiceClient) FindClosestPrecedingNode(ctx context.Context, req *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error) {
	return c.findClosestPrecedingNode.CallUnary(ctx, req)
}

// Notify calls server.InternalService.Notify.
func (c *internalServiceClient) Notify(ctx context.Context, req *connect.Request[server.Node]) (*connect.Response[emptypb.Empty], error) {
	return c.notify.CallUnary(ctx, req)
}

// PutValueInner calls server.InternalService.PutValueInner.
func (c *internalServiceClient) PutValueInner(ctx context.Context, req *connect.Request[server.PutValueInnerRequest]) (*connect.Response[server.PutValueInnerResponse], error) {
	return c.putValueInner.CallUnary(ctx, req)
}

// GetValueInner calls server.InternalService.GetValueInner.
func (c *internalServiceClient) GetValueInner(ctx context.Context, req *connect.Request[server.GetValueInnerRequest]) (*connect.Response[server.GetValueInnerResponse], error) {
	return c.getValueInner.CallUnary(ctx, req)
}

// DeleteValueInner calls server.InternalService.DeleteValueInner.
func (c *internalServiceClient) DeleteValueInner(ctx context.Context, req *connect.Request[server.DeleteValueInnerRequest]) (*connect.Response[server.DeleteValueInnerResponse], error) {
	return c.deleteValueInner.CallUnary(ctx, req)
}

// InternalServiceHandler is an implementation of the server.InternalService service.
type InternalServiceHandler interface {
	Ping(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[emptypb.Empty], error)
	Successors(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[server.Nodes], error)
	Predecessor(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[server.Node], error)
	FindSuccessorByTable(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error)
	FindSuccessorByList(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error)
	FindClosestPrecedingNode(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error)
	Notify(context.Context, *connect.Request[server.Node]) (*connect.Response[emptypb.Empty], error)
	PutValueInner(context.Context, *connect.Request[server.PutValueInnerRequest]) (*connect.Response[server.PutValueInnerResponse], error)
	GetValueInner(context.Context, *connect.Request[server.GetValueInnerRequest]) (*connect.Response[server.GetValueInnerResponse], error)
	DeleteValueInner(context.Context, *connect.Request[server.DeleteValueInnerRequest]) (*connect.Response[server.DeleteValueInnerResponse], error)
}

// NewInternalServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewInternalServiceHandler(svc InternalServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	internalServicePingHandler := connect.NewUnaryHandler(
		InternalServicePingProcedure,
		svc.Ping,
		connect.WithSchema(internalServicePingMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceSuccessorsHandler := connect.NewUnaryHandler(
		InternalServiceSuccessorsProcedure,
		svc.Successors,
		connect.WithSchema(internalServiceSuccessorsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServicePredecessorHandler := connect.NewUnaryHandler(
		InternalServicePredecessorProcedure,
		svc.Predecessor,
		connect.WithSchema(internalServicePredecessorMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceFindSuccessorByTableHandler := connect.NewUnaryHandler(
		InternalServiceFindSuccessorByTableProcedure,
		svc.FindSuccessorByTable,
		connect.WithSchema(internalServiceFindSuccessorByTableMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceFindSuccessorByListHandler := connect.NewUnaryHandler(
		InternalServiceFindSuccessorByListProcedure,
		svc.FindSuccessorByList,
		connect.WithSchema(internalServiceFindSuccessorByListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceFindClosestPrecedingNodeHandler := connect.NewUnaryHandler(
		InternalServiceFindClosestPrecedingNodeProcedure,
		svc.FindClosestPrecedingNode,
		connect.WithSchema(internalServiceFindClosestPrecedingNodeMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceNotifyHandler := connect.NewUnaryHandler(
		InternalServiceNotifyProcedure,
		svc.Notify,
		connect.WithSchema(internalServiceNotifyMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServicePutValueInnerHandler := connect.NewUnaryHandler(
		InternalServicePutValueInnerProcedure,
		svc.PutValueInner,
		connect.WithSchema(internalServicePutValueInnerMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceGetValueInnerHandler := connect.NewUnaryHandler(
		InternalServiceGetValueInnerProcedure,
		svc.GetValueInner,
		connect.WithSchema(internalServiceGetValueInnerMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	internalServiceDeleteValueInnerHandler := connect.NewUnaryHandler(
		InternalServiceDeleteValueInnerProcedure,
		svc.DeleteValueInner,
		connect.WithSchema(internalServiceDeleteValueInnerMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/server.InternalService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case InternalServicePingProcedure:
			internalServicePingHandler.ServeHTTP(w, r)
		case InternalServiceSuccessorsProcedure:
			internalServiceSuccessorsHandler.ServeHTTP(w, r)
		case InternalServicePredecessorProcedure:
			internalServicePredecessorHandler.ServeHTTP(w, r)
		case InternalServiceFindSuccessorByTableProcedure:
			internalServiceFindSuccessorByTableHandler.ServeHTTP(w, r)
		case InternalServiceFindSuccessorByListProcedure:
			internalServiceFindSuccessorByListHandler.ServeHTTP(w, r)
		case InternalServiceFindClosestPrecedingNodeProcedure:
			internalServiceFindClosestPrecedingNodeHandler.ServeHTTP(w, r)
		case InternalServiceNotifyProcedure:
			internalServiceNotifyHandler.ServeHTTP(w, r)
		case InternalServicePutValueInnerProcedure:
			internalServicePutValueInnerHandler.ServeHTTP(w, r)
		case InternalServiceGetValueInnerProcedure:
			internalServiceGetValueInnerHandler.ServeHTTP(w, r)
		case InternalServiceDeleteValueInnerProcedure:
			internalServiceDeleteValueInnerHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedInternalServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedInternalServiceHandler struct{}

func (UnimplementedInternalServiceHandler) Ping(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[emptypb.Empty], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.Ping is not implemented"))
}

func (UnimplementedInternalServiceHandler) Successors(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[server.Nodes], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.Successors is not implemented"))
}

func (UnimplementedInternalServiceHandler) Predecessor(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[server.Node], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.Predecessor is not implemented"))
}

func (UnimplementedInternalServiceHandler) FindSuccessorByTable(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.FindSuccessorByTable is not implemented"))
}

func (UnimplementedInternalServiceHandler) FindSuccessorByList(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.FindSuccessorByList is not implemented"))
}

func (UnimplementedInternalServiceHandler) FindClosestPrecedingNode(context.Context, *connect.Request[server.FindRequest]) (*connect.Response[server.Node], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.FindClosestPrecedingNode is not implemented"))
}

func (UnimplementedInternalServiceHandler) Notify(context.Context, *connect.Request[server.Node]) (*connect.Response[emptypb.Empty], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.Notify is not implemented"))
}

func (UnimplementedInternalServiceHandler) PutValueInner(context.Context, *connect.Request[server.PutValueInnerRequest]) (*connect.Response[server.PutValueInnerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.PutValueInner is not implemented"))
}

func (UnimplementedInternalServiceHandler) GetValueInner(context.Context, *connect.Request[server.GetValueInnerRequest]) (*connect.Response[server.GetValueInnerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.GetValueInner is not implemented"))
}

func (UnimplementedInternalServiceHandler) DeleteValueInner(context.Context, *connect.Request[server.DeleteValueInnerRequest]) (*connect.Response[server.DeleteValueInnerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("server.InternalService.DeleteValueInner is not implemented"))
}
