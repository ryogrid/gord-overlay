// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package gordserver;
option go_package = "github.com/taisho6339/gord/gordserver";

import "google/protobuf/empty.proto";

// ChordService provides interfaces for users.
service ChordService {
  rpc FindHostForKey(FindHostRequest) returns (Node) {}
}

// ChordInternalService is used for internal process communication.
// Internal chord process only.
service ChordInternalService {
  rpc Successor(google.protobuf.Empty) returns (Node) {}
  rpc Predecessor(google.protobuf.Empty) returns (Node) {}

  rpc FindSuccessor(FindRequest) returns (Node) {}
  rpc FindSuccessorFallback(FindRequest) returns (Node) {}
  rpc FindClosestPrecedingNode(FindRequest) returns (Node) {}

  rpc Notify(Node) returns (google.protobuf.Empty) {}
}

message FindHostRequest {
  string key = 1;
}

message FindRequest {
  bytes id = 1;
}

message Node {
  string host = 1;
  string port = 2;
}