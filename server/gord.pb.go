// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gord.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FindHostRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindHostRequest) Reset()         { *m = FindHostRequest{} }
func (m *FindHostRequest) String() string { return proto.CompactTextString(m) }
func (*FindHostRequest) ProtoMessage()    {}
func (*FindHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7eda68e4b06397df, []int{0}
}

func (m *FindHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindHostRequest.Unmarshal(m, b)
}
func (m *FindHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindHostRequest.Marshal(b, m, deterministic)
}
func (m *FindHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindHostRequest.Merge(m, src)
}
func (m *FindHostRequest) XXX_Size() int {
	return xxx_messageInfo_FindHostRequest.Size(m)
}
func (m *FindHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindHostRequest proto.InternalMessageInfo

func (m *FindHostRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Node struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_7eda68e4b06397df, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Node) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func init() {
	proto.RegisterType((*FindHostRequest)(nil), "server.FindHostRequest")
	proto.RegisterType((*Node)(nil), "server.Node")
}

func init() {
	proto.RegisterFile("gord.proto", fileDescriptor_7eda68e4b06397df)
}

var fileDescriptor_7eda68e4b06397df = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcf, 0x2f, 0x4a,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0x52, 0x52,
	0xe6, 0xe2, 0x77, 0xcb, 0xcc, 0x4b, 0xf1, 0xc8, 0x2f, 0x2e, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x12, 0xe0, 0x62, 0xce, 0x4e, 0xad, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02,
	0x31, 0x95, 0xf4, 0xb8, 0x58, 0xfc, 0xf2, 0x53, 0x52, 0x85, 0x84, 0xb8, 0x58, 0x32, 0xf2, 0x8b,
	0x4b, 0xa0, 0x52, 0x60, 0x36, 0x48, 0xac, 0x20, 0xbf, 0xa8, 0x44, 0x82, 0x09, 0x22, 0x06, 0x62,
	0x1b, 0x79, 0x70, 0x71, 0xbb, 0xe7, 0x17, 0xa5, 0x04, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a,
	0x59, 0x72, 0xf1, 0xc1, 0xec, 0x70, 0xcb, 0x2f, 0xf2, 0x4e, 0xad, 0x14, 0x12, 0xd7, 0x83, 0x58,
	0xaf, 0x87, 0x66, 0xb7, 0x14, 0x0f, 0x4c, 0x02, 0x64, 0x9f, 0x12, 0x83, 0x93, 0x72, 0x94, 0x62,
	0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x49, 0x62, 0x66, 0x71, 0x46,
	0xbe, 0x99, 0xb1, 0xb1, 0xa5, 0x3e, 0xc8, 0x2b, 0xfa, 0x10, 0xb5, 0x49, 0x6c, 0x60, 0x2f, 0x19,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x51, 0x17, 0x66, 0x3a, 0xe0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GordServiceClient is the client API for GordService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GordServiceClient interface {
	FindHostForKey(ctx context.Context, in *FindHostRequest, opts ...grpc.CallOption) (*Node, error)
}

type gordServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGordServiceClient(cc grpc.ClientConnInterface) GordServiceClient {
	return &gordServiceClient{cc}
}

func (c *gordServiceClient) FindHostForKey(ctx context.Context, in *FindHostRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/server.GordService/FindHostForKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GordServiceServer is the server API for GordService service.
type GordServiceServer interface {
	FindHostForKey(context.Context, *FindHostRequest) (*Node, error)
}

// UnimplementedGordServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGordServiceServer struct {
}

func (*UnimplementedGordServiceServer) FindHostForKey(ctx context.Context, req *FindHostRequest) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindHostForKey not implemented")
}

func RegisterGordServiceServer(s *grpc.Server, srv GordServiceServer) {
	s.RegisterService(&_GordService_serviceDesc, srv)
}

func _GordService_FindHostForKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GordServiceServer).FindHostForKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.GordService/FindHostForKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GordServiceServer).FindHostForKey(ctx, req.(*FindHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GordService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.GordService",
	HandlerType: (*GordServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindHostForKey",
			Handler:    _GordService_FindHostForKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gord.proto",
}
