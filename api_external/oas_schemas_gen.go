// Code generated by ogen, DO NOT EDIT.

package api_external

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Represents error object.
// Ref: #/definitions/Error
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int64 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int64) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type ExternalServiceDeleteValueReq struct {
	Key OptString `json:"key"`
}

// GetKey returns the value of Key.
func (s *ExternalServiceDeleteValueReq) GetKey() OptString {
	return s.Key
}

// SetKey sets the value of Key.
func (s *ExternalServiceDeleteValueReq) SetKey(val OptString) {
	s.Key = val
}

type ExternalServiceFindHostForKeyReq struct {
	Key OptString `json:"key"`
}

// GetKey returns the value of Key.
func (s *ExternalServiceFindHostForKeyReq) GetKey() OptString {
	return s.Key
}

// SetKey sets the value of Key.
func (s *ExternalServiceFindHostForKeyReq) SetKey(val OptString) {
	s.Key = val
}

type ExternalServiceGetValueReq struct {
	Key OptString `json:"key"`
}

// GetKey returns the value of Key.
func (s *ExternalServiceGetValueReq) GetKey() OptString {
	return s.Key
}

// SetKey sets the value of Key.
func (s *ExternalServiceGetValueReq) SetKey(val OptString) {
	s.Key = val
}

type ExternalServicePutValueReq struct {
	Key   OptString `json:"key"`
	Value OptString `json:"value"`
}

// GetKey returns the value of Key.
func (s *ExternalServicePutValueReq) GetKey() OptString {
	return s.Key
}

// GetValue returns the value of Value.
func (s *ExternalServicePutValueReq) GetValue() OptString {
	return s.Value
}

// SetKey sets the value of Key.
func (s *ExternalServicePutValueReq) SetKey(val OptString) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *ExternalServicePutValueReq) SetValue(val OptString) {
	s.Value = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/definitions/serverDeleteValueResponse
type ServerDeleteValueResponse struct {
	Success OptBool `json:"success"`
}

// GetSuccess returns the value of Success.
func (s *ServerDeleteValueResponse) GetSuccess() OptBool {
	return s.Success
}

// SetSuccess sets the value of Success.
func (s *ServerDeleteValueResponse) SetSuccess(val OptBool) {
	s.Success = val
}

// Ref: #/definitions/serverGetValueResponse
type ServerGetValueResponse struct {
	Value   OptString `json:"value"`
	Success OptBool   `json:"success"`
}

// GetValue returns the value of Value.
func (s *ServerGetValueResponse) GetValue() OptString {
	return s.Value
}

// GetSuccess returns the value of Success.
func (s *ServerGetValueResponse) GetSuccess() OptBool {
	return s.Success
}

// SetValue sets the value of Value.
func (s *ServerGetValueResponse) SetValue(val OptString) {
	s.Value = val
}

// SetSuccess sets the value of Success.
func (s *ServerGetValueResponse) SetSuccess(val OptBool) {
	s.Success = val
}

// Ref: #/definitions/serverNode
type ServerNode struct {
	Host OptString `json:"host"`
}

// GetHost returns the value of Host.
func (s *ServerNode) GetHost() OptString {
	return s.Host
}

// SetHost sets the value of Host.
func (s *ServerNode) SetHost(val OptString) {
	s.Host = val
}

// Ref: #/definitions/serverPutValueResponse
type ServerPutValueResponse struct {
	Success OptBool `json:"success"`
}

// GetSuccess returns the value of Success.
func (s *ServerPutValueResponse) GetSuccess() OptBool {
	return s.Success
}

// SetSuccess sets the value of Success.
func (s *ServerPutValueResponse) SetSuccess(val OptBool) {
	s.Success = val
}
